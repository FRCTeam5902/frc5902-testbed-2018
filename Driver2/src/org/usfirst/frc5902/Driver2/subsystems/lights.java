// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5902.Driver2.subsystems;

import org.usfirst.frc5902.Driver2.RobotMap;
import org.usfirst.frc5902.Driver2.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class lights extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController color = RobotMap.lights;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    	
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void Party () {
    	color.set(-.77);
    }

    public void Revenge () {
    	color.set(-.05);
    }
    
    public void White () {
    	color.set(.93);
    }
    
    public void BlueShots () {
    	color.set(-.83);
    }
    
    public void Blue () {
    	color.set(.85);
    }
    
    public void Red () {
    	color.set(.61);
    }
    
    public void BeatBlue () {
    	color.set(-.23);
    }
    
    public void OceanBlue () {
    	color.set(-.41);
    }
    
    public void RedShots () {
    	color.set(-.85);
    }
    
    public void ScannerRed () {
    	color.set(-.35);
    }
    
    public void BeatRed () {
    	color.set(-.25);
    }
    
    public void BeatWhite () {
    	color.set(-.21);
    }
    
    public void ScannerGray () {
    	color.set(-.33);
    }
    
    public void Gray () {
    	color.set(.95);
    } 
    
    public void StrobeYellah() {
    	color.set(-.07);
    	
    }
    
    public void LavaError() {
    	color.set(.49);
    	
    }
    
    public void Off () {
    	color.set(0);
    }
    
    public String getLightcolor() {
		String Color = "Null";
		switch ((int)(color.get()*100)) {
		case   0: Color = "Off"; break;
		case  49: Color = "Error"; break;
		case  -7: Color = "Strobe"; break;
		case  95: Color = "Gray"; break;
		case -33: Color = "Scanner Gray"; break;
		case -41: Color = "Calming Ocean"; break;
		case -85: Color = "Red Bullets"; break;
		case -35: Color = "Scanner Red"; break;
		case -21: Color = "Beat White"; break;
		case -25: Color = "Beat Red"; break;
		case -23: Color = "Beat Blue"; break;
		case -77: Color = "Party at Jeff's house - Atlas"; break;
		case  -5: Color = "How I really feel"; break;
		case  93: Color = "Revenge"; break;
		case -83: Color = "Blue Shots"; break;
		case  85: Color = "Blue"; break;
		case  61: Color = "Red"; break;}
		return Color;
    }
    
    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

